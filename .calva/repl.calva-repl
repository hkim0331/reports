; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
;
; See also the Calva Inspector: https://calva.io/inspector/

This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "reports Server + Client" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Starting Jack-in Terminal: (cd /Users/hkim/workspace/reports; npx shadow-cljs -d cider/cider-nrepl:0.47.1 watch app test)
; Using host:port localhost:7002 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉shadow.user꞉> 
; Evaluating 'afterCLJReplJackInCode'
; Access the server at http://localhost:3000
nil
clj꞉user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: reports Server + Client...
; Please start your ClojureScript app (load it in the browser, or whatever is appropriate) so that Calva can connect to its REPL...
; Waiting for Shadow CLJS runtimes, start your CLJS app...
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.cljs'
nil
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; nREPL Connection was closed
